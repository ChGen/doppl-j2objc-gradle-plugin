/*
 * Copyright (c) 2015 the authors of j2objc-gradle (see AUTHORS file)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Based on https://plugins.gradle.org/docs/publish-plugin
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven {
            // change to point to your repo, e.g. http://my.org/repo
//            url "http://dopplmaven.s3-website-us-east-1.amazonaws.com/"
            url dopplMavenDeploy
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.5'
        classpath 'co.touchlab.doppel:doppelgradle:0.4.0-SNAPSHOT'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.5'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "com.gradle.plugin-publish" version "0.9.0"
    // Outputs a BuildInfo.java file with information about the git repo;
    // also fails plugin publishing if your git working directory is unclean.
    // Note this only enforces that the code you are publishing is committed
    // to your local repo; you have to make sure to push it upstream.
    id "com.madvay.tools.build.gitbuildinfo" version "0.1.2-alpha"
}
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'kotlin'

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://raw.github.com/Raizlabs/maven-releases/master/releases' }
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
        maven {
            // change to point to your repo, e.g. http://my.org/repo
//            url "http://dopplmaven.s3-website-us-east-1.amazonaws.com/"
            url dopplMavenDeploy
        }
    }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.build:gradle:2.2.1'
    compile 'org.codehaus.groovy:groovy-android-gradle-plugin:1.1.0'
    compile  "org.jetbrains.kotlin:kotlin-stdlib:1.0.5"
    compile  "org.jetbrains.kotlin:kotlin-reflect:1.0.5"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
    distributionUrl = 'https://services.gradle.org/distributions/gradle-2.4-all.zip'
}

group = 'co.touchlab.doppel'

// A suffix of -SNAPSHOT means this is not an official release of the
// system, but built from an intermediate source tree.  Instructions:
// https://github.com/j2objc-contrib/j2objc-gradle/blob/master/CONTRIBUTING.md#publishing-and-versioning
version = "0.4.1-SNAPSHOT"

test {
    testLogging {
        // Provide full exception info on failure, instead
        // of just pointing to an HTML file.
        exceptionFormat = 'full'
    }
}

pluginBundle {
    website = 'https://www.github.com/j2objc-contrib/j2objc-gradle/'
    vcsUrl = 'https://github.com/j2objc-contrib/j2objc-gradle'
    description =
            "Gradle Plugin for J2ObjC, which is an open-source tool from Google that translates " +
            "Java source code to Objective-C for the iOS (iPhone/iPad) platform. The plugin is " +
            "not affiliated with Google but was developed by former Google Engineers and others. " +
            "J2ObjC enables Java source to be part of an iOS application's build, no editing " +
            "of the generated files is necessary. The goal is to write an app's non-UI code " +
            "(such as application logic and data models) in Java, which is then shared by " +
            "Android apps, web apps (using GWT), and iOS apps (using J2ObjC)."
    tags = ['android', 'java', 'j2objc', 'ios', 'iphone', 'objective-c', 'xcode']

    plugins {
        j2objcPlugin {
            id = 'com.touchlab.doppel.doppelgradle'
            displayName = 'Doppel Gradle Plugin'
        }
    }
}

project.tasks.all {
    if (it.name == 'publishPluginGroovyDocsJar' || it.name == 'publishPluginJavaDocsJar') {
        it.from(project.file('src/main/resources/'))
    }
}

configurations {
    includeInJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'doppelgradle'
            from components.java
        }
    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url dopplMavenDeploy
        }
    }
}


/*install {
    repositories.mavenInstaller {
        pom.version = project.version
        pom.artifactId = 'doppelgradle'
    }
}*/

buildStamp {
    repoBaseUrl "https://github.com/touchlab/j2objc-gradle/tree/"
    packageName "com.github.j2objccontrib.j2objcgradle"
}
